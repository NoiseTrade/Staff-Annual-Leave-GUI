/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package staffannualleavesystem;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author david
 */
public class AddStaffFrame extends javax.swing.JFrame{

    /**
     * Creates new form AddStaffFrame
     */
    public AddStaffFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addStaffLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        staffTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        lastNameTxt = new javax.swing.JTextField();
        ageTxt = new javax.swing.JTextField();
        addStaffBtn = new javax.swing.JButton();
        saveStaffBtn = new javax.swing.JButton();
        loadStaffBtn = new javax.swing.JButton();
        staffIDTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        pronounsTxt = new javax.swing.JTextField();
        holidayEntitlementTxt = new javax.swing.JTextField();
        holidayRequestTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        deleteStaffBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addStaffLabel.setFont(new java.awt.Font("Verdana", 3, 18)); // NOI18N
        addStaffLabel.setText("Staff Management");

        staffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Staff ID", "First Name", "Last Name", "Age", "Pronouns", "Holiday Entitlement", "Holidays Requested", "Holidays Remaining"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(staffTable);

        jLabel1.setText("First Name");

        jLabel2.setText("Last Name");

        jLabel3.setText("Age");

        jLabel4.setText("Pronouns");

        jLabel5.setText("Holiday Entitlement");

        firstNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTxtActionPerformed(evt);
            }
        });

        addStaffBtn.setText("Add Staff");
        addStaffBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStaffBtnActionPerformed(evt);
            }
        });

        saveStaffBtn.setText("Save Staff List");
        saveStaffBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveStaffBtnActionPerformed(evt);
            }
        });

        loadStaffBtn.setText("Load Staff List");
        loadStaffBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadStaffBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Staff ID");

        jLabel7.setText("Holiday Day Request");

        deleteStaffBtn.setText("Delete Staff Record");
        deleteStaffBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStaffBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(holidayEntitlementTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(holidayRequestTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel6)))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ageTxt)
                            .addComponent(lastNameTxt)
                            .addComponent(firstNameTxt)
                            .addComponent(staffIDTxt)
                            .addComponent(pronounsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(addStaffBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveStaffBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadStaffBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteStaffBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addStaffLabel)
                        .addGap(0, 757, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addStaffLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(staffIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6))
                            .addComponent(addStaffBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(deleteStaffBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(loadStaffBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(pronounsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(saveStaffBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(holidayEntitlementTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(holidayRequestTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTxtActionPerformed

    private void addStaffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStaffBtnActionPerformed
       
        if(firstNameTxt.getText().equals("")||lastNameTxt.getText().equals("")||ageTxt.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Please Enter Data");
        }else
        {
         
            ArrayList<Employees> employeeArrayList = new ArrayList<>();
            
            employeeArrayList.add(new Employees(staffIDTxt.getText(),firstNameTxt.getText(),lastNameTxt.getText(),ageTxt.getText(),pronounsTxt.getText(),holidayEntitlementTxt.getText(),holidayRequestTxt.getText()));
            
            String aEmployeeId = employeeArrayList.get(0).getIdNumber();
            String aEmployeeFirstName = employeeArrayList.get(0).getFirstName();
            String aEmployeeLastName = employeeArrayList.get(0).getLastName();
            String aEmployeeAge = employeeArrayList.get(0).getAge();
            String aEmployeePronoun = employeeArrayList.get(0).getPronouns();
            String aHolidayEntitlement = employeeArrayList.get(0).getHolidayEntitlement();
            String aHolidayRequested = employeeArrayList.get(0).getHoldaysRequested();
            
            int holidayRequested = Integer.parseInt(holidayRequestTxt.getText());
            int holidayEntitlement = Integer.parseInt(holidayEntitlementTxt.getText());
            
            int holidaysRemaining = holidayEntitlement - holidayRequested;
            
            int staffAge = Integer.parseInt(ageTxt.getText());
            
           
            Object[] employeeInfo = {aEmployeeId,aEmployeeFirstName,aEmployeeLastName,aEmployeeAge,aEmployeePronoun,aHolidayEntitlement,aHolidayRequested,holidaysRemaining};
            
        
       
            try 
            {
                
             if(holidayRequested > holidayEntitlement){
             JOptionPane.showMessageDialog(this, "You do not have enough Holiday Entitlement");
             validateHolidayRequest(holidayEntitlement, holidayRequested);}
             
             if(staffAge < 16){
                 JOptionPane.showMessageDialog(this, "Staff Member must be over 16 to legally work");
             }else{
            
                 
          
            DefaultTableModel model = (DefaultTableModel) staffTable.getModel();
          
            model.addRow(employeeInfo);
            
            staffIDTxt.setText("");
            firstNameTxt.setText("");
            lastNameTxt.setText("");
            ageTxt.setText("");
            pronounsTxt.setText("");       
            holidayEntitlementTxt.setText("");
            holidayRequestTxt.setText("");
          
            }
            
            }catch(InvalidHolidayRequestExeption ex){
             java.util.logging.Logger.getLogger(AddStaffFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                
            }
        }
        
    }//GEN-LAST:event_addStaffBtnActionPerformed

    private void deleteStaffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStaffBtnActionPerformed
        
        DefaultTableModel model = (DefaultTableModel) staffTable.getModel();
       
        //Delete Selected Row        
        int getSelectedRowForDeletion = staffTable.getSelectedRow();
       
        model.removeRow(getSelectedRowForDeletion);
       
        
        
    }//GEN-LAST:event_deleteStaffBtnActionPerformed

    private void saveStaffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveStaffBtnActionPerformed
       
        //code to save staff list file to document
        
        try{
            
            //set the source of where the file data will be written
            File file = new File("C:\\Users\\david\\Desktop\\staffList.txt");
            
           if(!file.exists()){
               file.createNewFile();
           }
            
           FileWriter fw = new FileWriter(file.getAbsoluteFile());
           BufferedWriter bw = new BufferedWriter(fw);
           
           for(int i = 0; i <staffTable.getRowCount(); i++){
               for(int j =0; j < staffTable.getColumnCount(); j++){
                   
                   bw.write(staffTable.getModel().getValueAt(i,j) + " ");
               }
                  //makes a new row for each piece of saved data 
               bw.write("\n");
           }
           
           //stops the Filewriter
              bw.close();
              fw.close();
              JOptionPane.showMessageDialog(this, "Data Exported!");
           
        }catch(IOException e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_saveStaffBtnActionPerformed

    private void loadStaffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadStaffBtnActionPerformed
        
         String filePath = "C:\\Users\\david\\Desktop\\staffList.txt";
        File file = new File(filePath);
        
        try{
           
        BufferedReader br = new BufferedReader(new FileReader(file)); 
       
        DefaultTableModel model = (DefaultTableModel) staffTable.getModel();
        
        Object[] tableLines = br.lines().toArray();
        
        for(int i = 0; i < tableLines.length; i++){
            
            String line = tableLines[i].toString().trim();
            String[] dataRow = line.split(" ");
            model.addRow(dataRow);
        }
       
        br.close();
        JOptionPane.showMessageDialog(this, "Data Imported!");
        
        }catch (IOException e){
            e.printStackTrace();
        }
        
        
        
        
    }//GEN-LAST:event_loadStaffBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
       //firstNameTxtus (introduced in Java SE 6) is not available, stay with the default look and feel.
        // * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
        // */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStaffFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStaffFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStaffFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStaffFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStaffFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStaffBtn;
    private javax.swing.JLabel addStaffLabel;
    private javax.swing.JTextField ageTxt;
    private javax.swing.JButton deleteStaffBtn;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JTextField holidayEntitlementTxt;
    private javax.swing.JTextField holidayRequestTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameTxt;
    private javax.swing.JButton loadStaffBtn;
    private javax.swing.JTextField pronounsTxt;
    private javax.swing.JButton saveStaffBtn;
    private javax.swing.JTextField staffIDTxt;
    private javax.swing.JTable staffTable;
    // End of variables declaration//GEN-END:variables

private void validateHolidayRequest(int holidayEntitlement, int holidayRequest)throws InvalidHolidayRequestExeption{
    //checks if holidays requested are greater than the holiday entitlement of the staff member
    
    if(holidayRequest > holidayEntitlement){
        throw new InvalidHolidayRequestExeption("You do not have enough Holiday Days to meet Holiday Request");
    }
}

private static class InvalidHolidayRequestException{
    public InvalidHolidayRequestException(){
        
    }
}


}

